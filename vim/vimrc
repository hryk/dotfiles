" vimrc
set nocompatible
" Chicken Or Egg Dilemma
"   http://gmarik.info/blog/2011/05/17/chicken-or-egg-dilemma
source $HOME/.vim/bundles.vim " $ vim -u bundles.vim +BundleInstall +q

"" color scheme

syntax enable
set background=dark
let g:solarized_termcolors=256
colorscheme solarized

set backspace=eol,indent,start

"" search pattern
set ignorecase
set smartcase
set hlsearch
set incsearch

"" status
set showmode
set showcmd
set showmatch

"" show line number 
set number

"" indenting
set expandtab
set ts=2
set shiftwidth=2
set softtabstop=2

"" backup
set nobackup

"" statusline
set laststatus=2


"" encodings
set termencoding=utf-8
set encoding=utf-8
set fileencodings=utf-8,euc-jp,iso-2022-jp
set ambiwidth=double

nnoremap fe :<C-u>e ++enc=euc-jp<Enter>
nnoremap fs :<C-u>e ++enc=shift-jis<Enter>
nnoremap fu :<C-u>e ++enc=utf-8<Enter>

"" folding
set foldmethod=marker

" key binding

"" leader
let mapleader=","

"" edit vimrc
nnoremap <Space>.	:<C-u>edit $MYVIMRC<Enter>

"" reload vimrc
nnoremap <Space>s.	:<C-u>source $MYVIMRC<Enter>

"" show help about a word under cursor
nnoremap <C-h><C-h> :<C-u>help<Space>

"" : -> ;
noremap ; :
noremap : ;

"" j -> gj, k -> gk
noremap j gj
noremap k gk
noremap gj j
noremap gk k

"" insert date
inoremap <expr> ,df strftime('%Y-%m-%dT%H:%M:%S')
inoremap <expr> ,dd strftime('%Y-%m-%d')
inoremap <expr> ,dt strftime('%H:%M:%S')

"" gc (g changee)
nnoremap gc `[v`]
vnoremap gc :<C-u>normal gc<Enter>
onoremap gc :<C-u>normal gc<Enter>

"" redraw
nnoremap sh :<C-u>redraw!<Enter>

" wordwrap
" nnoremap GG gqG

nnoremap <Leader>H :call<SID>LongLineHLToggle()<cr>
hi OverLength ctermbg=none cterm=none
match OverLength /\%>80v/
fun! s:LongLineHLToggle()
  if !exists('w:longlinehl')
    let w:longlinehl = matchadd('ErrorMsg', '.\%>80v', 0)
    echo "Long lines highlighted"
  else
    call matchdelete(w:longlinehl)
    unl w:longlinehl
    echo "Long lines unhighlighted"
  endif
endfunction

"""""""""""""""""""""""""""""""""""""""""
" autocmds
"----------------------------------------
" autocmd!

au BufRead,BufNewFile *.thor   setf ruby
au BufRead,BufNewFile *.coffee setf coffee
au BufRead,BufNewFile *.as     setf actionscript

" delete trailing whitespace when saved.
autocmd FileType c,cpp,java,php,ruby,javascript,haml,coffee,css autocmd BufWritePre <buffer> :%s/\s\+$//e
autocmd User Rails Rnavcommand fabricator spec/fabricators -suffix=_fabricator.rb -default=model()
" au FileType spec map <buffer> <Leader>o <Plug>AddChangelogItem
" let spec_chglog_prepend = 1

""""""""""""""""""""""""""""""""""""""""""
" Plugin Settings
"
" Plugins are installed with Vundle.
" see ~/.vim/bundles.vim
"
""""""""""""""""""""""""""""""""""""""""""

""""""""""""""""""""""""""""""""""""""""""
" Coffee
"-----------------------------------------

hi link coffeeSpaceError NONE
hi link coffeeSemicolonError NONE
hi link coffeeReservedError NONE

""""""""""""""""""""""""""""""""""""""""""
" vimfiler
"-----------------------------------------

let g:vimfiler_as_default_explorer = 1
" nnoremap <silent> lf :<C-u>VimFiler -split -simple -winwidth=35 -no-quit<CR>

""""""""""""""""""""""""""""""""""""""""""
" Unite
"-----------------------------------------

let g:unite_enable_start_insert = 1
let g:unite_source_file_mru_filename_format = ''
let g:unite_winheight = 15

nnoremap <silent> <C-f> :<C-u>Unite -toggle -auto-resize file file_mru file/new locate<Enter>
nnoremap <silent> <C-c> :<C-u>UniteWithCurrentDir -toggle -auto-resize file file/new<CR>
nnoremap <silent> <C-b> :<C-u>Unite -toggle buffer<Enter>
nnoremap <silent> gl :<C-u>Unite -toggle git<Enter>
nnoremap <silent> gb :<C-u>Unite -toggle file file/new file_mru<Enter>
nnoremap <silent> bg :<C-u>Unite -toggle buffer<Enter>

autocmd FileType unite cal s:unite_my_settings()
function! s:unite_my_settings()
  imap <silent><buffer> <C-j> <Plug>(unite_do_default_action)<CR>
  imap <silent><buffer> <Esc><Esc> <Plug>(unite_exit)<CR>
  nmap <silent><buffer> <Esc><Esc> <Plug>(unite_exit)<CR>
  imap <silent><buffer> <Esc>j <Plug>(unite_exit)<CR>
  nmap <silent><buffer> <Esc>j <Plug>(unite_exit)<CR>
  nmap <silent><buffer> <Esc> <Plug>(unite_exit)<CR>
  nmap <silent><buffer> <C-w> <Plug>(unite_delete_backward_path)
  imap <silent><buffer> <C-w> <Plug>(unite_delete_backward_path)
  nmap <silent><buffer> <C-h> <Plug>(unite_delete_backward_char)
  imap <silent><buffer> <C-h> <Plug>(unite_delete_backward_char)
endfunction

""""""""""""""""""""""""""""""""""""""""""
" Rails.vim
"-----------------------------------------

nnoremap rr :<C-u>1R<Space>

""""""""""""""""""""""""""""""""""""""""""
" Surround
"-----------------------------------------

let g:surround_45 = "<% \r -%>"
let g:surround_61 = "<%= \r %>"
let g:surround_{char2nr("g")} = "[[\r]]"

""""""""""""""""""""""""""""""""""""""""""
" taglist
" ----------------------------------------

let Tlist_Auto_Open       = 0
let Tlist_Close_On_Select = 1
let Tlist_Ctags_Cmd='/usr/local/bin/ctags'
nnoremap <silent> tl :TlistToggle<CR>
nnoremap <silent> tq :TlistClose<CR>

""""""""""""""""""""""""""""""""""""""""""
" git-branch-info
" ----------------------------------------

let g:git_branch_status_text=": git :"

""""""""""""""""""""""""""""""""""""""""""
" changelog.vim
" ----------------------------------------

let g:changelog_timeformat = "%Y-%m-%d"
let g:changelog_username = "Hiroyuki Nakamura <hiroyuki@1vq9.com>"
let g:spec_chglog_format = "%c Hiroyuki Nakamura <hiroyuki@1vq9.com>>"

au BufNewFile,BufRead *.changelog,Changelog,Changes,ChangeLog setf changelog

""""""""""""""""""""""""""""""""""""""""""
" neocomplecache
" ----------------------------------------

let g:neocomplcache_enable_at_startup  = 1
let g:neocomplcache_enable_auto_select = 1
let g:neocomplcache_enable_smart_case  = 1 
let g:neocomplcache_enable_underbar_completion = 0
" let g:neocomplcache_disable_select_mode_mappings = 1
let g:neocomplcache_enable_fuzzy_completion = 1
let g:neocomplcache_snippets_dir='~/.vim/snippets'
let g:neocomplcache_max_list = 5


" inoremap <expr><TAB> pumvisible() ? "\<C-n>" : "\<TAB>"
" inoremap <expr><C-n> pumvisible() ? "\<C-n>" : "\<C-x>\<C-u>\<C-p>"

" inoremap <expr><TAB> pumvisible() ? "\<C-n>" : neocomplcache#start_manual_complete()
inoremap <expr><C-n> pumvisible() ? "\<C-n>" : neocomplcache#start_manual_complete()
inoremap <expr><C-e> neocomplcache#close_popup()
inoremap <expr><CR>  neocomplcache#smart_close_popup() ."\<CR>"
inoremap <expr><C-j>  neocomplcache#manual_omni_complete()

""""""""""""""""""""""""""""""""""""""""""
" syntactic
" ----------------------------------------

let g:syntastic_check_on_open=1

let g:syntastic_mode_map = { 'mode': 'active',
                           \ 'active_filetypes': ['ruby', 'php', 'python', 'javascript'],
                           \ 'passive_filetypes': ['puppet', 'html', 'haml', 'java'] }

let g:syntastic_ruby_checkers = ['mri', 'rubocop', 'macruby']
let g:syntastic_ruby_exec = '~/.rbenv/versions/2.0.0-p195/bin/ruby'


""""""""""""""""""""""""""""""""""""""""""
" linediff
" ----------------------------------------

" vnoremap ld :<C-u>Linediff <Enter>
" nnoremap lr :<C-u>LinediffReset <Enter>

let g:html_indent_inctags = "html,body,head,tbody"
let g:html_indent_script1 = "inc"
let g:html_indent_style1  = "inc"

""""""""""""""""""""""""""""""""""""""""""
" markdown
" ----------------------------------------

let g:vim_markdown_folding_disabled=1
