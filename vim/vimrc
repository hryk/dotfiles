
" hiroyuki vimrc
" Changed at 2009-09-23T12:35:02

syntax on
filetype on
filetype indent on
filetype plugin on

" options
set backspace=eol,indent,start

"" search pattern
set ignorecase
set smartcase
set hlsearch
set incsearch
set nocompatible

"" status
set showmode
set showcmd
set showmatch

"" show line number 
set number

"" indenting
set expandtab
set ts=2
set shiftwidth=2
set softtabstop=2

"" backup
set nobackup

"" statusline
set laststatus=2
set statusline=%<%f\ %m%r%h%w%{'['.(&fenc!=''?&fenc:&enc).']['.&ff.']['.&ft.']'}%{GitBranchInfoString()}%=%l,%c%V%8P

"" encodings
set termencoding=utf-8
set encoding=utf-8
set fileencodings=utf-8,euc-jp,iso-2022-jp
set ambiwidth=double

"" folding

set foldmethod=marker

" key binding

"" edit vimrc
nnoremap <Space>.	:<C-u>edit $MYVIMRC<Enter>

"" reload vimrc
nnoremap <Space>s.	:<C-u>source $MYVIMRC<Enter>

"" help
nnoremap <C-h>  :<C-u>help<Space>

"" show help about a word under cursor
nnoremap <C-h><C-h> :<C-u>help<Space><C-r><C-w><Enter>

"" : -> ;
noremap ; :
noremap : ;

"" j -> gj, k -> gk
noremap j gj
noremap k gk
noremap gj j
noremap gk k

"" insert date
inoremap <expr> ,df strftime('%Y-%m-%dT%H:%M:%S')
inoremap <expr> ,dd strftime('%Y-%m-%d')
inoremap <expr> ,dt strftime('%H:%M:%S')

"" gc (g changee)
nnoremap gc `[v`]
vnoremap gc :<C-u>normal gc<Enter>
onoremap gc :<C-u>normal gc<Enter>

"" redraw
nnoremap sh :<C-u>redraw!<Enter>

"""""""""""""""""""""""""""""""""""""""""
" autocmds
"----------------------------------------
" autocmd!
"

au BufRead,BufNewFile *.thor             setfiletype ruby


""""""""""""""""""""""""""""""""""""""""""
" Plugin Settings
"
" MEMO
" - install help tag
"   :helptags ~/.vim/doc
""""""""""""""""""""""""""""""""""""""""""

""""""""""""""""""""""""""""""""""""""""""
" Fuzzy Finder - 3.2
"-----------------------------------------

"" Options
let g:fuf_keyOpen = '<C-j>'
let g:fuf_keyOpenSplit = '<CR>'
let g:fuf_infoFile = '~/.vim/fufinfo'

" Binding
nnoremap <silent> <C-f><C-d> :<C-u>FufAddBookmark<Enter>
nnoremap <silent> <C-f><C-e> :<C-u>FufEditInfo<Enter>
nnoremap <silent> gb :<C-u>FufFile<Enter>
nnoremap <silent> bg :<C-u>FufBuffer<Enter>
nnoremap <silent> gd :<C-u>FufDir<Enter>
nnoremap <silent> bd :<C-u>FufBookmark<Enter>
nnoremap <silent> br :<C-u>FufMruFile<Enter>
nnoremap <silent> bc :<C-u>FufMruCmd<Enter>
nnoremap <silent> gt :<C-u>FufTag<Enker>
nnoremap <silent> bG :<C-u>FufFile <C-r>=expand('%:~:.')[:-1-len(expand('%:~:.:t'))]<Enter><Enter>

""""""""""""""""""""""""""""""""""""""""""
" Rails.vim
"-----------------------------------------


""""""""""""""""""""""""""""""""""""""""""
" Surround
"-----------------------------------------

let g:surround_45 = "<% \r -%>"
let g:surround_61 = "<%= \r %>"

""""""""""""""""""""""""""""""""""""""""""
" cpan-list.vim
"-----------------------------------------

let g:cpan_win_height=10
"g:cpan_browser_command  : command for launching browser
"g:cpan_win_type         : v (vertical) or s (horizontal) cpan window
"g:cpan_win_width        : cpan window width (when vertical)
"g:cpan_win_height       : cpan window height (when horizontal)
"g:cpan_win_mode         : default cpan window mode (search installed modules or all modules or currentlib ./lib)
"g:cpan_installed_cache  : filename of installed package cache
"g:cpan_source_cache     : filename of package source cache
"g:cpan_cache_expiry     : cache expirytime in minutes
"g:cpan_max_result       : max search result
"g:cpan_install_command  : command for installing cpan modules
"g:cpan_user_defined_sources : user-defined package source paths


""""""""""""""""""""""""""""""""""""""""""
" taglist
" ----------------------------------------

let Tlist_Auto_Open       = 1
let Tlist_Close_On_Select = 1
let Tlist_Ctags_Cmd='/usr/local/bin/ctags'
nnoremap <silent> tl :TlistToggle<CR>
nnoremap <silent> tq :TlistClose<CR>

""""""""""""""""""""""""""""""""""""""""""
" vcssupport
" ----------------------------------------

""""""""""""""""""""""""""""""""""""""""""
" git-branch-info
" ----------------------------------------

let g:git_branch_status_text=": git :"

""""""""""""""""""""""""""""""""""""""""""
" git.vim
" ----------------------------------------

let mapleader = ","

""""""""""""""""""""""""""""""""""""""""""
" outputz.vim
" ----------------------------------------

" let g:outputz_secret_key=""

""""""""""""""""""""""""""""""""""""""""""
" cpan.vim
" ----------------------------------------

let g:cpan_install_command = 'sudo /usr/local/bin/cpan'
let g:cpan_browser_command = '/usr/local/bin/cpan'
" let g:cpan_win_mode   = g:CPAN.Mode.Installed
let g:cpan_win_type   = 'vsplit'   " v (vertical) or s (split)
let g:cpan_win_width  = 30
let g:cpan_win_height = 10
" let g:cpan_installed_cache  = expand('~/.vim-cpan-installed-modules')
" let g:cpan_source_cache     = expand('~/.vim-cpan-source')
let g:cpan_cache_expiry     = 60 * 24 * 3   " 7 days
let g:cpan_max_result = 50
let g:cpan_user_defined_sources = []
